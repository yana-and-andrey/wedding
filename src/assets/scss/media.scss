@import './variables.scss';

@function breakpoints($name) {
  @return map-get($breakpoints, $name);
}

@function media-max($name, $breakpoints: $breakpoints) {
  $max: map-get($breakpoints, $name);
  @return if($max and $max > 0, $max - 0.02, null);
}

@function media-min($name, $breakpoints: $breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@function media-next(
  $name,
  $breakpoints: $breakpoints,
  $breakpoint-names: map-keys($breakpoints)
) {
  $n: index($breakpoint-names, $name);
  @if not $n {
    @error "Брейкпоинт `#{$name}` не найден в `#{$breakpoints}`";
  }
  @return if(
    $n < length($breakpoint-names),
    nth($breakpoint-names, $n + 1),
    null
  );
}

@mixin media-up($name, $breakpoints: $breakpoints) {
  $min: media-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin media-down($name, $breakpoints: $breakpoints) {
  $max: media-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin media-between($lower, $upper, $breakpoints: $breakpoints) {
  $min: media-min($lower, $breakpoints);
  $max: media-max($upper, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-up($lower, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-down($upper, $breakpoints) {
      @content;
    }
  }
}

@mixin media-only($name, $breakpoints: $breakpoints) {
  $min: media-min($name, $breakpoints);
  $next: media-next($name, $breakpoints);
  $max: media-max($next);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-up($name, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-down($next, $breakpoints) {
      @content;
    }
  }
}
